---
# tasks file for docker


# For future Ansible Docker facilities
- name: install docker-py
  environment: "{{ proxy_env }}"
  pip: name=docker-py
  #pip: name=docker-py extra_args='--user'


- name: purge any older 'lxc-docker*' packages
  ignore_errors: yes
  apt: name='lxc-docker*' force=yes purge=yes state=absent


- name: purge any older 'docker.io*' packages
  ignore_errors: yes
  apt: name='docker.io*' force=yes purge=yes state=absent


- name: purge any older 'docker-engine' package
  ignore_errors: yes
  apt: name='docker-engine' force=yes purge=yes state=absent


- name: remove all images/containers
  file:
    path: /var/lib/docker
    state: absent


- name: add the new gpg key
  environment: "{{ proxy_env }}"
  apt_key:
    keyserver: "hkp://p80.pool.sks-keyservers.net:80"
    id: "58118E89F3A912897C070ADBF76221572C52609D"


- name: update the apt docker.list file
  lineinfile:
    state: present
    create: yes
    owner: root
    group: root
    mode: 0644
    dest: /etc/apt/sources.list.d/docker.list
    line: "deb {{ apt_list_docker_url }}"


- name: install transport https package
  apt: name='{{ item }}' state=present
  with_items:
    - apt-transport-https
    - ca-certificates


# update can't be done until 'apt-transport-https' package installed
- name: install docker package
  apt: name='{{ item }}' update_cache=yes state=present
  with_items:
    - docker-engine


- name: is initsystem among SysV or Systemd
  action: shell stat /proc/1/exe
  register: init_system


- name: with 'systemd' - create /etc/systemd/system/docker.service.d directory
  file:
    path: "/etc/systemd/system/docker.service.d"
    state: directory
    owner: "root"
    group: "root"
    mode: 0755
    recurse: no
  when: (proxy_env['http_proxy'] is defined) and (proxy_env['http_proxy'] != '') and (init_system.stdout.find('systemd') != -1)


- name:  with 'systemd' - create /etc/systemd/system/docker.service.d/http-proxy.conf file
  lineinfile:
    state: present
    create: yes
    owner: "root"
    group: "root"
    mode: 0644
    dest: "/etc/systemd/system/docker.service.d/http-proxy.conf"
    line: "{{ item }}"
  with_items:
    - "[Service]"
    - "Environment=\"HTTP_PROXY={{ proxy_env['http_proxy'] | default(omit) }}\""
  when: (proxy_env['http_proxy'] is defined) and (proxy_env['http_proxy'] != '') and (init_system.stdout.find('systemd') != -1)


- name: reload systemd
  command: systemctl daemon-reload
  when: (proxy_env['http_proxy'] is defined) and (proxy_env['http_proxy'] != '') and (init_system.stdout.find('systemd') != -1)


- name: with 'init' - update /etc/default/docker file
  lineinfile:
    state: present
    create: no
    owner: "root"
    group: "root"
    mode: 0644
    insertafter: "export http_proxy"
    dest: "/etc/default/docker"
    line: "export http_proxy=\"{{ proxy_env['http_proxy'] }}\""
  when: (proxy_env['http_proxy'] is defined) and (proxy_env['http_proxy'] != '') and (init_system.stdout.find('init') != -1)


- name: add the docker group
  group: name=docker state=present


- name: add user to the docker group
  user:
    append: yes
    name: "{{ item }}"
    groups: docker
  with_items:
    - "{{ user2dockergroup }}"


- name: stop docker service
  service: name=docker state=stopped


- name: start docker service
  service: name=docker state=started
